{
  "get": {
    "prefix": "get",
    "body": [
      "#include <stdio.h>",
      "int main()",
      "{",
      "\tint $1;",
      "\treturn 0;",
      "}"
    ],
    "description": "Log output to console"
  },
  "get string": {
    "prefix": "get string",
    "body": [
      "#include <stdio.h>",
      "#include <string.h>",
      "int main()",
      "{",
      "    int ${1: edit};",
      "    return 0;",
      "}"
    ],
    "description": "Log output to console"
  },
  "get math": {
    "prefix": "get math",
    "body": [
      "#include <stdio.h>",
      "#include <math.h>",
      "int main()",
      "{",
      "    int ${1: edit};",
      "    return 0;",
      "}"
    ],
    "description": "Log output to console"
  },
  "return": {
    "prefix": "return",
    "body": ["return ${1:0};"],
    "description": "Log output to console"
  },
  "#": {
    "prefix": "#in",
    "body": ["#include <${1:stdio}.h>", "$2"],
    "description": "Log output to console"
  },
  "int": {
    "prefix": "int",
    "body": ["int ${1: edit} ;"],
    "description": "Log output to console"
  },
  "char": {
    "prefix": "char",
    "body": ["char ${1: edit} ;"],
    "description": "Log output to console"
  },
  "float": {
    "prefix": "float",
    "body": ["float ${1: edit} ;"],
    "description": "Log output to console"
  },
  "double": {
    "prefix": "double",
    "body": ["double ${1: edit} ;"],
    "description": "Log output to console"
  },
  "printf": {
    "prefix": "print",
    "body": ["printf(\"${1:hello world!}\\n\");"],
    "description": "this is use for print"
  },
  "scanf": {
    "prefix": "scanf",
    "body": ["scanf(\"%d\",&${1:Edit});"],
    "description": "Log output to console"
  },
  "for": {
    "prefix": "for",
    "body": [
      "for (${size_t} ${i} = ${1:0}; ${i} < ${2:length}; ${i}++)",
      "{",
      "$3",
      "}"
    ],
    "description": "Code snippet for 'for' loop"
  },
  "forr": {
    "prefix": "forr",
    "body": [
      "for (int ${i} = ${1:length} - 1; ${i} >= ${2:0}; ${i}--)",
      "{",
      "$3",
      "}"
    ],
    "description": "Code snippet for reverse 'for' loop"
  },
  "while": {
    "prefix": "while",
    "body": ["while ($1)", "{", "$2", "}"],
    "description": ""
  },
  "if": {
    "prefix": "if",
    "body": ["if ($1)", "{", "$2", "}"],
    "description": "Code snippet for if statement"
  },
  "else": {
    "prefix": "else",
    "body": ["else", "{", "\t$1", "}"],
    "description": "Code snippet for else statement"
  },
  "else if": {
    "prefix": "else if",
    "body": ["else if ($1)", "{", "$2", "}"],
    "description": "Code snippet for else-if statement"
  },
  "enum": {
    "prefix": "enum",
    "body": ["enum ${MyEnum}", "{", "$1", "};"],
    "description": "Code snippet for enum"
  },
  "#ifdef": {
    "prefix": "#ifdef",
    "body": ["#ifdef ${DEBUG}", "$1", "#endif // ${DEBUG}"],
    "description": "Code snippet for #ifdef"
  },
  "#ifndef": {
    "prefix": "#ifndef",
    "body": ["#ifndef ${1:1}", "$2", "#endif // !$1"],
    "description": "Code snippet for #ifndef"
  },
  "#if": {
    "prefix": "#if",
    "body": ["#ifdef ${1:0}", "$2", "#endif // $1"],
    "description": "Code snippet for #if"
  },
  "struct": {
    "prefix": "struct",
    "body": ["struct ${MyStruct}", "{", "$1", "};"],
    "description": "Code snippet for struct"
  },
  "switch": {
    "prefix": "switch",
    "body": ["switch (${switch_on})", "{", "default:", "break;$1", "}"],
    "description": "Code snippet for switch statement"
  },
  "union": {
    "prefix": "union",
    "body": ["union ${MyUnion}", "{", "$1", "};"],
    "description": "Code snippet for union"
  },
  "#inc": {
    "prefix": "#inc",
    "body": ["#include \"$1\""],
    "description": "Code snippet for #include \" \""
  },
  "#inc<": {
    "prefix": "#inc<",
    "body": ["#include <$1>"],
    "description": "Code snippet for #include \" \""
  },
  "#def": {
    "prefix": "#def",
    "body": ["#define \"$1\" \"$2\" "],
    "description": "Code snippet for #define \" \""
  }
}
